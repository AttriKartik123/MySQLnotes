-----create database college ;
-----use college ;

---------------------------------create database if not exists college ;

------------------Creating table in MySQL ?
-----create table student(  id int primary key , name varchar(50) , age int not null   );

-----drop database if exists college ;

-----show databases;
show tables ; 

------------------CREATING A TABLE IN MYSQL:
----Ans: 
create table student (rollno int not null , name varchar(50) );
show tables ;


insert into student (rollno , name) 
values (1,"Karan") ,
(2, "Harleen"),
(3, "Iman"),
(4, "Jatin"),
(5, "Akash") ;

select * from student ;



----------------PRIMARY  AND FOREIGN KEY CONCEPT :
ANs:    
use college;

-- Create city table first
create table city (
    id int primary key,
    city_name varchar(50)
);

insert into city (id, city_name) values
(101, "Jalandhar"),
(103, "Ludhiana"),
(105, "Sydney"),
(107, "Pathankot"),
(108, "Faridkot");

select * from city;

-- Create student table referencing city.id
create table student (
    id int primary key,
    name varchar(35),
    city_id int,
    foreign key (city_id) references city(id)
);

insert into student (id, name, city_id) values
(1, "Karan", 101),
(2, "AAdhy", 103),
(3, "Chahat", 105),
(4, "Des raj", 107),
(5, "Asha", 108);

select * from student;





----------------------------- 
 -- ---------------------SELECT IN DETAIL -----------------------------
create database if not exists college ;
use college ;
create table student (
rollno int primary key ,
name varchar (50) ,
marks int not null ,
grade varchar (1) ,
city varchar (20) 
);

 -- Inserting the data 
 insert into student
 ( rollno , name , marks , grade , city )
 values ( 101 , "Anil" , 78 , "C" , "Pune" ),
 ( 102 , "bhumika" , 93 , "A" , "mumbai" ),
 ( 103 , "chetan" , 85 , "B" , "mumbai" ),
 ( 104 , "dhruv" , 96 , "A" , "delhi" ),
 ( 105 , "emanuel" , 12 , "F" , "delhi" ),
 ( 106 , "farah" , 82 , "B" , "delhi" ) ;
 
 select * from student ;
 
  -- -----------------SELECTING MARKS OF THE STUDENTS WHERE MARKS IS GREATER THAN 80 ------------------
 select * from student where marks > 80 ;
 
  -- -----------------SELECTING STUDENTS FROM MUMBAI------------------
select * from student where city = "mumbai" ;

  -- -----------------OPERATORRS EXAMPLES       AND , OR------------------
  
   -- -----------------SELECTING STUDENTS HAVING MARKS GREATER THAN 80 AND THEY LIVE IN MUMBAI ------------------
  select * from student where marks > 80 and city = "mumbai" ;
  
   -- -----------------SELECTING STUDENTS HAVING MARKS GREATER THAN 90 OR THEY LIVE IN MUMBAI ------------------
    select * from student where marks > 90 or city = "mumbai" ;
    
    
      -- -----------------OPERATORRS EXAMPLES       BETWEEN , IN ,NOT IN  ------------------
      
        -- --------------SELECTING STUDENTS HAVING MARKS BETWEEN 80 AND 90 ---------------------
	select * from student where marks between 75 and 85 ;
    
      -- -----------------SELECTING STUDENTS LIVING IN DELHI AND MUMBAI------------------
select * from student where city in ("delhi" , "mumbai" );

  -- -----------------LIMIT CLAUSE------------------
     -- -----------------WE WANT ONLY 3 RECORDS , TUPLES OF STUDENTS------------------
select * from student limit 4 ;

  -- -----------------ORDER BY CLAUSE------------------
    -- -----------------ASCENDING AND DESCENDING ORDER------------------

select * from student order by city asc;
select * from student order by city desc;


   -- -----------------AGGREGATE FUNCTIONS   -- max and average ------------------
   select max(marks) from student ;
   
   select avg(marks) from student ;
   
   
   -- ------------------------GROUP BY CLAUSE - Groups rows that have the same values into summary rows. It collects data from multiple records and groups the result by one or more column.  *Generally we use group by with some aggregation function. 
   
select city , count(name) 
   from student 
   group by city ;
   
   
   
   -- ------------------HAVING CLAUSE ------------------------
   -- ----------------------- Count number of students in each city where max marks cross 90.--------------------------
   
   select count(name) , city 
   from student group by city 
   having max(marks) > 90 ;
   
   
   
   
   -- ----------------GENERAL ORDER General Order  SELECT  column(s) ------- FROM table_name------WHERE condition------ GROUP BY column(s)------- HAVING condition -----ORDER BY column(s) ASC-----------------
   

 






   
   